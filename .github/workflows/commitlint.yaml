name: Lint Commit messages
on: ["pull_request"]

jobs:
  conventional-commits:
    runs-on: ubuntu-latest
    permissions:
      pull-requests: write
      contents: read
      id-token: write
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - uses: actions/setup-node@v4
        with:
          node-version: 18
      - run: npm install -g  @commitlint/cli
      - name: Check commit messages
        env:
            COMMITS_URL: ${{ github.event.pull_request.commits_url }}
            COMMENTS_URL: ${{ github.event.pull_request.comments_url }}
            GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          COMMITS=$(curl -H "Authorization: token $GITHUB_TOKEN" "$COMMITS_URL")

          jq -c '.[]' <<< "$COMMITS" | while read COMMIT; do
            MSG=$(jq -r '.commit.message' <<< "$COMMIT")
            SHA=$(jq -r '.sha' <<< "$COMMIT")

            echo $MSG > commit-msg.txt

            echo "Checking commit message: '$MSG' for commit '$SHA'"
            if commitlint --edit "commit-msg.txt" > /dev/null 2>&1; then
              echo "- Commit message complies."
            else
              echo "- Commit message does not comply."
              echo "### Commit message of $SHA does not comply with the conventional commits specification." >> commit-errors.txt
              echo "<blockquote>$MSG</blockquote>" >> commit-errors.txt
              echo "" >> commit-errors.txt
              echo "Use \`git rebase -i $SHA~1\` to edit all commits starting from this error." >> commit-errors.txt
              echo "Change *pick* to *reword* on the commits you want to edit." >> commit-errors.txt
              echo "Use \`git push -f\` to override the existing commit messages with the new ones." >> commit-errors.txt
              echo "" >> commit-errors.txt
            fi
          done

          if [ -f "commit-errors.txt" ]; then
            BODY=$(awk '{printf "%s\\n", $0}' commit-errors.txt)
            BODY="$BODY\nUse [commitlint](https://github.com/conventional-changelog/commitlint) to prevent this error in the future."

            curl -X POST -H "Authorization: token $GITHUB_TOKEN" -H "Content-Type: application/vnd.github+json" -d "{\"body\": \"$BODY\"}" "$COMMENTS_URL" > /dev/null 2>&1
            exit 1
          else
            echo "Commit messages comply with the commitlint specification."
          fi